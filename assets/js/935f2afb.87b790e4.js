"use strict";(self.webpackChunkwiki_docusaurus=self.webpackChunkwiki_docusaurus||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Home","href":"/yogeshcodes/","docId":"Home"},{"type":"category","label":"Tech Notes","items":[{"type":"link","label":"JavaScript and TypeScript Monorepos","href":"/yogeshcodes/tech-notes/js-ts-monorepo","docId":"tech-notes/js-ts-monorepo"},{"type":"link","label":"Design Systems with Storybook","href":"/yogeshcodes/tech-notes/design-system-storybook","docId":"tech-notes/design-system-storybook"},{"type":"link","label":"tailwind-react-config","href":"/yogeshcodes/tech-notes/tailwind-react-config","docId":"tech-notes/tailwind-react-config"},{"type":"link","label":"Postgraphile Start Notes","href":"/yogeshcodes/tech-notes/postgraphile","docId":"tech-notes/postgraphile"},{"type":"link","label":"Problem Solving Notes","href":"/yogeshcodes/tech-notes/problem-solving","docId":"tech-notes/problem-solving"},{"type":"link","label":"Full Stack Notes (Frontend Masters)","href":"/yogeshcodes/tech-notes/frontend-masters-full-stack-notes","docId":"tech-notes/frontend-masters-full-stack-notes"},{"type":"link","label":"Object Oriented Design","href":"/yogeshcodes/tech-notes/objected-oriented-design","docId":"tech-notes/objected-oriented-design"},{"type":"link","label":"Simple Promise Implementation","href":"/yogeshcodes/tech-notes/simple-promise-notes","docId":"tech-notes/simple-promise-notes"}],"collapsible":true,"collapsed":true,"href":"/yogeshcodes/category/tech-notes"},{"type":"category","label":"Bookmarks","items":[{"type":"link","label":"All Bookmarks","href":"/yogeshcodes/bookmarks/all-bookmarks","docId":"bookmarks/all-bookmarks"}],"collapsible":true,"collapsed":true,"href":"/yogeshcodes/category/bookmarks"},{"type":"category","label":"Coding Patterns","items":[{"type":"category","label":"Solid Principles","items":[{"type":"link","label":"Interface Segregation Principle","href":"/yogeshcodes/coding-patterns/solid-principles/interface-segregation-principle","docId":"coding-patterns/solid-principles/interface-segregation-principle"},{"type":"link","label":"Liskov Principle","href":"/yogeshcodes/coding-patterns/solid-principles/liskov-principle","docId":"coding-patterns/solid-principles/liskov-principle"},{"type":"link","label":"Open Closed Principle","href":"/yogeshcodes/coding-patterns/solid-principles/open-closed-principle","docId":"coding-patterns/solid-principles/open-closed-principle"},{"type":"link","label":"Single Responsibility Principle","href":"/yogeshcodes/coding-patterns/solid-principles/single-responsibility-principle","docId":"coding-patterns/solid-principles/single-responsibility-principle"},{"type":"link","label":"Dependency Inversion Principle","href":"/yogeshcodes/coding-patterns/solid-principles/dependency-inversion-principle","docId":"coding-patterns/solid-principles/dependency-inversion-principle"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Structural Principles","items":[{"type":"link","label":"Command Pattern","href":"/yogeshcodes/coding-patterns/structural/command-pattern","docId":"coding-patterns/structural/command-pattern"},{"type":"link","label":"Constructor Pattern","href":"/yogeshcodes/coding-patterns/structural/constructor-pattern","docId":"coding-patterns/structural/constructor-pattern"},{"type":"link","label":"Facade Pattern","href":"/yogeshcodes/coding-patterns/structural/facade-pattern","docId":"coding-patterns/structural/facade-pattern"},{"type":"link","label":"Mediator Pattern","href":"/yogeshcodes/coding-patterns/structural/mediator-pattern","docId":"coding-patterns/structural/mediator-pattern"},{"type":"link","label":"Module Pattern","href":"/yogeshcodes/coding-patterns/structural/module-pattern","docId":"coding-patterns/structural/module-pattern"},{"type":"link","label":"Observer Pattern","href":"/yogeshcodes/coding-patterns/structural/observer-pattern","docId":"coding-patterns/structural/observer-pattern"},{"type":"link","label":"Prototype Pattern","href":"/yogeshcodes/coding-patterns/structural/prototype-pattern","docId":"coding-patterns/structural/prototype-pattern"},{"type":"link","label":"Revealing Module Pattern","href":"/yogeshcodes/coding-patterns/structural/revealing-module-pattern","docId":"coding-patterns/structural/revealing-module-pattern"},{"type":"link","label":"Singleton Pattern","href":"/yogeshcodes/coding-patterns/structural/singleton-pattern","docId":"coding-patterns/structural/singleton-pattern"}],"collapsible":true,"collapsed":true},{"type":"link","label":"OOPS","href":"/yogeshcodes/coding-patterns/oops","docId":"coding-patterns/oops"}],"collapsible":true,"collapsed":true,"href":"/yogeshcodes/category/coding-patterns"},{"type":"category","label":"Web","items":[{"type":"link","label":"Algorithms","href":"/yogeshcodes/web-interview/web-interview-algorithms","docId":"web-interview/web-interview-algorithms"},{"type":"link","label":"HTML","href":"/yogeshcodes/web-interview/web-interview-html","docId":"web-interview/web-interview-html"},{"type":"link","label":"CSS","href":"/yogeshcodes/web-interview/web-interview-css","docId":"web-interview/web-interview-css"},{"type":"link","label":"Javascript","href":"/yogeshcodes/web-interview/web-interview-javascript","docId":"web-interview/web-interview-javascript"},{"type":"link","label":"Angular","href":"/yogeshcodes/web-interview/web-interview-react","docId":"web-interview/web-interview-react"},{"type":"link","label":"Typescript","href":"/yogeshcodes/web-interview/web-interview-typescript","docId":"web-interview/web-interview-typescript"},{"type":"link","label":"Webpack","href":"/yogeshcodes/web-interview/web-interview-webpack","docId":"web-interview/web-interview-webpack"},{"type":"link","label":"Security","href":"/yogeshcodes/web-interview/web-interview-web-security","docId":"web-interview/web-interview-web-security"},{"type":"link","label":"React Native","href":"/yogeshcodes/web-interview/web-interview-react-native","docId":"web-interview/web-interview-react-native"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Algorithms","items":[{"type":"category","label":"Searching","items":[{"type":"link","label":"Binary Searching","href":"/yogeshcodes/algorithms/searching/binary-searching","docId":"algorithms/searching/binary-searching"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Sorting","items":[{"type":"link","label":"Bubble Sort","href":"/yogeshcodes/algorithms/sorting/bubble-sort","docId":"algorithms/sorting/bubble-sort"},{"type":"link","label":"Insertion Sort","href":"/yogeshcodes/algorithms/sorting/insertion-sort","docId":"algorithms/sorting/insertion-sort"},{"type":"link","label":"Merge Sort","href":"/yogeshcodes/algorithms/sorting/merge-sort","docId":"algorithms/sorting/merge-sort"},{"type":"link","label":"Quick Sort","href":"/yogeshcodes/algorithms/sorting/quick-sort","docId":"algorithms/sorting/quick-sort"},{"type":"link","label":"Radix Sort","href":"/yogeshcodes/algorithms/sorting/radix-sort","docId":"algorithms/sorting/radix-sort"},{"type":"link","label":"Selection Sort","href":"/yogeshcodes/algorithms/sorting/selection-sort","docId":"algorithms/sorting/selection-sort"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Graphs","items":[{"type":"link","label":"Graphs Overview","href":"/yogeshcodes/algorithms/graphs/graphs-overview","docId":"algorithms/graphs/graphs-overview"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Trees","items":[{"type":"link","label":"Trees Overview","href":"/yogeshcodes/algorithms/trees/trees-overview","docId":"algorithms/trees/trees-overview"}],"collapsible":true,"collapsed":true},{"type":"link","label":"Two Pointer Technique","href":"/yogeshcodes/algorithms/two-pointer-technique","docId":"algorithms/two-pointer-technique"}],"collapsible":true,"collapsed":true},{"type":"category","label":"System Design","items":[{"type":"link","label":"Overview","href":"/yogeshcodes/system-design/system-design-overview","docId":"system-design/system-design-overview"},{"type":"link","label":"Client Server Model","href":"/yogeshcodes/system-design/system-design-client-server-model","docId":"system-design/system-design-client-server-model"},{"type":"link","label":"Network Protocols","href":"/yogeshcodes/system-design/system-design-network-protocols","docId":"system-design/system-design-network-protocols"},{"type":"link","label":"Storage","href":"/yogeshcodes/system-design/system-design-storage","docId":"system-design/system-design-storage"},{"type":"link","label":"Latency And Throughput","href":"/yogeshcodes/system-design/system-design-latency-throughput","docId":"system-design/system-design-latency-throughput"},{"type":"link","label":"Availability","href":"/yogeshcodes/system-design/system-design-availability","docId":"system-design/system-design-availability"},{"type":"link","label":"Caching","href":"/yogeshcodes/system-design/system-design-caching","docId":"system-design/system-design-caching"},{"type":"link","label":"Proxies","href":"/yogeshcodes/system-design/system-design-proxies","docId":"system-design/system-design-proxies"},{"type":"link","label":"Load Balancers","href":"/yogeshcodes/system-design/system-design-load-balancers","docId":"system-design/system-design-load-balancers"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Personal Development","items":[{"type":"link","label":"Audience Identification","href":"/yogeshcodes/personal-development/audience-identification","docId":"personal-development/audience-identification"}],"collapsible":true,"collapsed":true}]},"docs":{"algorithms/graphs/graphs-overview":{"id":"algorithms/graphs/graphs-overview","title":"Graphs Overview","description":"Graph","sidebar":"docs"},"algorithms/searching/binary-searching":{"id":"algorithms/searching/binary-searching","title":"Binary Searching","description":"","sidebar":"docs"},"algorithms/sorting/bubble-sort":{"id":"algorithms/sorting/bubble-sort","title":"Bubble Sort","description":"","sidebar":"docs"},"algorithms/sorting/insertion-sort":{"id":"algorithms/sorting/insertion-sort","title":"Insertion Sort","description":"","sidebar":"docs"},"algorithms/sorting/merge-sort":{"id":"algorithms/sorting/merge-sort","title":"Merge Sort","description":"merge sort","sidebar":"docs"},"algorithms/sorting/quick-sort":{"id":"algorithms/sorting/quick-sort","title":"Quick Sort","description":"","sidebar":"docs"},"algorithms/sorting/radix-sort":{"id":"algorithms/sorting/radix-sort","title":"Radix Sort","description":"Radix sort - Wikipedia","sidebar":"docs"},"algorithms/sorting/selection-sort":{"id":"algorithms/sorting/selection-sort","title":"Selection Sort","description":"","sidebar":"docs"},"algorithms/trees/trees-overview":{"id":"algorithms/trees/trees-overview","title":"Trees Overview","description":"Tree","sidebar":"docs"},"algorithms/two-pointer-technique":{"id":"algorithms/two-pointer-technique","title":"Two Pointer Technique","description":"Two pointers is really an easy and effective technique that is typically used for searching pairs in a sorted array.","sidebar":"docs"},"behavioural/tell-me-about-yourself":{"id":"behavioural/tell-me-about-yourself","title":"Answering tell me about yourself","description":"A lot of jobs require someone who can think on their feet or present ideas with crispness and clarity. This question provides employers with an early preview of your core skills, your personality and your ability to respond to an unstructured question."},"bookmarks/all-bookmarks":{"id":"bookmarks/all-bookmarks","title":"All Bookmarks","description":"Collaboration","sidebar":"docs"},"coding-patterns/oops":{"id":"coding-patterns/oops","title":"OOPS","description":"WIP","sidebar":"docs"},"coding-patterns/solid-principles/dependency-inversion-principle":{"id":"coding-patterns/solid-principles/dependency-inversion-principle","title":"Dependency Inversion Principle","description":"WIP","sidebar":"docs"},"coding-patterns/solid-principles/interface-segregation-principle":{"id":"coding-patterns/solid-principles/interface-segregation-principle","title":"Interface Segregation Principle","description":"WIP","sidebar":"docs"},"coding-patterns/solid-principles/liskov-principle":{"id":"coding-patterns/solid-principles/liskov-principle","title":"Liskov Principle","description":"WIP","sidebar":"docs"},"coding-patterns/solid-principles/open-closed-principle":{"id":"coding-patterns/solid-principles/open-closed-principle","title":"Open Closed Principle","description":"WIP","sidebar":"docs"},"coding-patterns/solid-principles/single-responsibility-principle":{"id":"coding-patterns/solid-principles/single-responsibility-principle","title":"Single Responsibility Principle","description":"WIP","sidebar":"docs"},"coding-patterns/structural/command-pattern":{"id":"coding-patterns/structural/command-pattern","title":"Command Pattern","description":"The command pattern is useful in cases when we want to decouple objects executing the commands from objects issuing the commands. For example, imagine a scenario where our application is using a large number of API service calls. Then, let\u2019s say that the API services change. We would have to modify the code wherever the APIs that changed are called.","sidebar":"docs"},"coding-patterns/structural/constructor-pattern":{"id":"coding-patterns/structural/constructor-pattern","title":"Constructor Pattern","description":"When thinking about classical object-oriented languages, a constructor is a special function in a class which initializes an object with some set of default and/or sent-in values.","sidebar":"docs"},"coding-patterns/structural/facade-pattern":{"id":"coding-patterns/structural/facade-pattern","title":"Facade Pattern","description":"The facade pattern is used when we want to create an abstraction layer between what is shown publicly and what is implemented behind the curtain. It is used when an easier or simpler interface to an underlying object is desired.","sidebar":"docs"},"coding-patterns/structural/mediator-pattern":{"id":"coding-patterns/structural/mediator-pattern","title":"Mediator Pattern","description":"We will briefly cover a pattern which is also very useful when talking about decoupled systems. When we have a scenario where multiple parts of a system need to communicate and be coordinated, perhaps a good solution would be to introduce a mediator.","sidebar":"docs"},"coding-patterns/structural/module-pattern":{"id":"coding-patterns/structural/module-pattern","title":"Module Pattern","description":"As far as peculiarities go, JavaScript never ceases to amaze. Another peculiar thing to JavaScript (at least as far as object-oriented languages go) is that JavaScript does not support access modifiers. In a classical OOP language, a user defines a class and determines access rights for its members. Since JavaScript in its plain form supports neither classes nor access modifiers, JavaScript developers figured out a way to mimic this behavior when needed.","sidebar":"docs"},"coding-patterns/structural/observer-pattern":{"id":"coding-patterns/structural/observer-pattern","title":"Observer Pattern","description":"The observer pattern is a very useful tool when we have a scenario where we need to improve the communication between disparate parts of our system in an optimized way. It promotes loose coupling between objects.","sidebar":"docs"},"coding-patterns/structural/prototype-pattern":{"id":"coding-patterns/structural/prototype-pattern","title":"Prototype Pattern","description":"As we have already mentioned throughout the article, JavaScript does not support classes in its native form. Inheritance between objects is implemented using prototype-based programming.","sidebar":"docs"},"coding-patterns/structural/revealing-module-pattern":{"id":"coding-patterns/structural/revealing-module-pattern","title":"Revealing Module Pattern","description":"This pattern is an improvement made to the module pattern as illustrated above. The main difference is that we write the entire object logic in the private scope of the module and then simply expose the parts we want to be public by returning an anonymous object. We can also change the naming of private members when mapping private members to their corresponding public members.","sidebar":"docs"},"coding-patterns/structural/singleton-pattern":{"id":"coding-patterns/structural/singleton-pattern","title":"Singleton Pattern","description":"The singleton pattern is used in scenarios when we need exactly one instance of a class. For example, we need to have an object which contains some configuration for something. In these cases, it is not necessary to create a new object whenever the configuration object is required somewhere in the system.","sidebar":"docs"},"connected-senses":{"id":"connected-senses","title":"Connected Senses Project","description":"A sample post with markdown."},"Home":{"id":"Home","title":"About me","description":"Hey, I\u2019m Yogesh. I\u2019m a software engineer based in India!.","sidebar":"docs"},"personal-development/audience-identification":{"id":"personal-development/audience-identification","title":"Audience Identification","description":"1. AGE - Based on the event you gonna give your speech we need to make the presentation accordingly.  If you giving speech in wedding the age group might be more than 40. If you giving speech in school function the age group may be < 20.","sidebar":"docs"},"react/react-tips-tricks":{"id":"react/react-tips-tricks","title":"React tips & tricks","description":"Avoid Rerendering"},"system-design/system-design-availability":{"id":"system-design/system-design-availability","title":"Availability","description":"The odds of a particular server or service being up and running at any point","sidebar":"docs"},"system-design/system-design-caching":{"id":"system-design/system-design-caching","title":"Caching","description":"Cache","sidebar":"docs"},"system-design/system-design-client-server-model":{"id":"system-design/system-design-client-server-model","title":"Client Server Model","description":"A client is a thing that talks to servers. A server is a thing that talks to clients. The client\u2014server model is a thing made up of a bunch of clients and servers talking to one another.","sidebar":"docs"},"system-design/system-design-hashing":{"id":"system-design/system-design-hashing","title":"Hashing","description":""},"system-design/system-design-latency-throughput":{"id":"system-design/system-design-latency-throughput","title":"Latency And Throughput","description":"Latency and Throughput are the two important measures to measure the performance of the system.","sidebar":"docs"},"system-design/system-design-load-balancers":{"id":"system-design/system-design-load-balancers","title":"Load Balancers","description":"Relentlessly distributing network requests across multiple servers, these digital traffic cops act as watchful guardians for your system, ensuring that it operates at peak performance day and night.","sidebar":"docs"},"system-design/system-design-network-protocols":{"id":"system-design/system-design-network-protocols","title":"Network Protocols","description":"IP packets. TCP headers. HTTP requests. As daunting as they may seem, these low-level networking concepts are essential to understanding how machines in a system communicate with one another. And as we all know, proper communication is key for thriving relationships!","sidebar":"docs"},"system-design/system-design-overview":{"id":"system-design/system-design-overview","title":"Overview","description":"- System design is all about building robust, functional, scalable applications.","sidebar":"docs"},"system-design/system-design-proxies":{"id":"system-design/system-design-proxies","title":"Proxies","description":"Forward Proxy","sidebar":"docs"},"system-design/system-design-storage":{"id":"system-design/system-design-storage","title":"Storage","description":"WIP","sidebar":"docs"},"tech-notes/design-system-storybook":{"id":"tech-notes/design-system-storybook","title":"Design Systems with Storybook","description":"Introduction","sidebar":"docs"},"tech-notes/frontend-masters-full-stack-notes":{"id":"tech-notes/frontend-masters-full-stack-notes","title":"Full Stack Notes (Frontend Masters)","description":"- Someone who can build an application from start to finish called as a Full Stack Engineer.","sidebar":"docs"},"tech-notes/js-ts-monorepo":{"id":"tech-notes/js-ts-monorepo","title":"JavaScript and TypeScript Monorepos","description":"Monorepo","sidebar":"docs"},"tech-notes/objected-oriented-design":{"id":"tech-notes/objected-oriented-design","title":"Object Oriented Design","description":"Software Development Methodologies.","sidebar":"docs"},"tech-notes/postgraphile":{"id":"tech-notes/postgraphile","title":"Postgraphile Start Notes","description":"npm i db-migrate db-migrate-pg","sidebar":"docs"},"tech-notes/problem-solving":{"id":"tech-notes/problem-solving","title":"Problem Solving Notes","description":"- Big O","sidebar":"docs"},"tech-notes/simple-promise-notes":{"id":"tech-notes/simple-promise-notes","title":"Simple Promise Implementation","description":"","sidebar":"docs"},"tech-notes/tailwind-react-config":{"id":"tech-notes/tailwind-react-config","title":"tailwind-react-config","description":"\x3c!-- ---","sidebar":"docs"},"web-interview/web-interview-algorithms":{"id":"web-interview/web-interview-algorithms","title":"Algorithms","description":"Searching","sidebar":"docs"},"web-interview/web-interview-css":{"id":"web-interview/web-interview-css","title":"CSS","description":"1. What is CSS selector specificity and how does it work?","sidebar":"docs"},"web-interview/web-interview-html":{"id":"web-interview/web-interview-html","title":"HTML","description":"1. What does a DOCTYPE do?","sidebar":"docs"},"web-interview/web-interview-javascript":{"id":"web-interview/web-interview-javascript","title":"Javascript","description":"1. Explain event delegation?","sidebar":"docs"},"web-interview/web-interview-react":{"id":"web-interview/web-interview-react","title":"Angular","description":"1. How does Angular work?","sidebar":"docs"},"web-interview/web-interview-react-native":{"id":"web-interview/web-interview-react-native","title":"React Native","description":"1. What is React Native?","sidebar":"docs"},"web-interview/web-interview-typescript":{"id":"web-interview/web-interview-typescript","title":"Typescript","description":"1. What are the primitive types in TypeScript?","sidebar":"docs"},"web-interview/web-interview-web-security":{"id":"web-interview/web-interview-web-security","title":"Security","description":"1. What is the difference between Authentication vs Authorization?","sidebar":"docs"},"web-interview/web-interview-webpack":{"id":"web-interview/web-interview-webpack","title":"Webpack","description":"1. What is webpack?","sidebar":"docs"}}}')}}]);