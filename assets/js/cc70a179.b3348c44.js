"use strict";(self.webpackChunkwiki_docusaurus=self.webpackChunkwiki_docusaurus||[]).push([[6793],{3905:(e,n,r)=>{r.d(n,{Zo:()=>a,kt:()=>y});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},a=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,a=l(e,["components","mdxType","originalType","parentName"]),d=s(r),y=i,f=d["".concat(c,".").concat(y)]||d[y]||u[y]||o;return r?t.createElement(f,p(p({ref:n},a),{},{components:r})):t.createElement(f,p({ref:n},a))}));function y(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,p=new Array(o);p[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,p[1]=l;for(var s=2;s<o;s++)p[s]=r[s];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},413:(e,n,r)=>{r.r(n),r.d(n,{frontMatter:()=>o,contentTitle:()=>p,metadata:()=>l,toc:()=>c,default:()=>a});var t=r(7462),i=(r(7294),r(3905));const o={id:"single-responsibility-principle",title:"Single Responsibility Principle"},p=void 0,l={unversionedId:"coding-patterns/solid-principles/single-responsibility-principle",id:"coding-patterns/solid-principles/single-responsibility-principle",title:"Single Responsibility Principle",description:"WIP",source:"@site/docs/coding-patterns/solid-principles/single-responsibility.md",sourceDirName:"coding-patterns/solid-principles",slug:"/coding-patterns/solid-principles/single-responsibility-principle",permalink:"/yogeshcodes/coding-patterns/solid-principles/single-responsibility-principle",tags:[],version:"current",frontMatter:{id:"single-responsibility-principle",title:"Single Responsibility Principle"},sidebar:"docs",previous:{title:"Open Closed Principle",permalink:"/yogeshcodes/coding-patterns/solid-principles/open-closed-principle"},next:{title:"Dependency Inversion Principle",permalink:"/yogeshcodes/coding-patterns/solid-principles/dependency-inversion-principle"}},c=[],s={toc:c};function a(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"WIP"))}a.isMDXComponent=!0}}]);