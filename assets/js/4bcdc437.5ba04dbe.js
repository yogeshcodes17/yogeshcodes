"use strict";(self.webpackChunkwiki_docusaurus=self.webpackChunkwiki_docusaurus||[]).push([[6297],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),y=o,d=m["".concat(c,".").concat(y)]||m[y]||l[y]||a;return n?r.createElement(d,s(s({ref:t},u),{},{components:n})):r.createElement(d,s({ref:t},u))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7767:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>a,contentTitle:()=>s,metadata:()=>i,toc:()=>c,default:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={id:"prototype-pattern",title:"Prototype Pattern"},s=void 0,i={unversionedId:"coding-patterns/structural/prototype-pattern",id:"coding-patterns/structural/prototype-pattern",title:"Prototype Pattern",description:"As we have already mentioned throughout the article, JavaScript does not support classes in its native form. Inheritance between objects is implemented using prototype-based programming.",source:"@site/docs/coding-patterns/structural/prototype-pattern.md",sourceDirName:"coding-patterns/structural",slug:"/coding-patterns/structural/prototype-pattern",permalink:"/yogeshcodes/coding-patterns/structural/prototype-pattern",tags:[],version:"current",frontMatter:{id:"prototype-pattern",title:"Prototype Pattern"},sidebar:"docs",previous:{title:"Observer Pattern",permalink:"/yogeshcodes/coding-patterns/structural/observer-pattern"},next:{title:"Revealing Module Pattern",permalink:"/yogeshcodes/coding-patterns/structural/revealing-module-pattern"}},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As we have already mentioned throughout the article, JavaScript does not support classes in its native form. Inheritance between objects is implemented using prototype-based programming."),(0,o.kt)("p",null,"It enables us to create objects which can serve as a prototype for other objects being created. The prototype object is used as a blueprint for each object the constructor creates."),(0,o.kt)("p",null,"As we have already talked about this in the previous sections, let\u2019s show a simple example of how this pattern might be used."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'var personPrototype = {\n    sayHi: function() {\n        console.log("Hello, my name is " + this.name + ", and I am " + this.age);\n    },\n    sayBye: function() {\n        console.log("Bye Bye!");\n    }\n};\n\nfunction Person(name, age) {\n    name = name || "John Doe";\n    age = age || 26;\n\n    function constructorFunction(name, age) {\n        this.name = name;\n        this.age = age;\n    };\n\n    constructorFunction.prototype = personPrototype;\n\n    var instance = new constructorFunction(name, age);\n    return instance;\n}\n\nvar person1 = Person();\nvar person2 = Person("Bob", 38);\n\n// prints out Hello, my name is John Doe, and I am 26\nperson1.sayHi();\n// prints out Hello, my name is Bob, and I am 38\nperson2.sayHi();\n')),(0,o.kt)("p",null,"Take notice how prototype inheritance makes a performance boost as well because both objects contain a reference to the functions which are implemented in the prototype itself, instead of in each of the objects."))}u.isMDXComponent=!0}}]);