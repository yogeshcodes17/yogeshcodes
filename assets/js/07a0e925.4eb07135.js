"use strict";(self.webpackChunkwiki_docusaurus=self.webpackChunkwiki_docusaurus||[]).push([[2515],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),y=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=y(e.components);return r.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,p=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=y(t),g=o,S=u["".concat(p,".").concat(g)]||u[g]||l[g]||c;return t?r.createElement(S,i(i({ref:n},s),{},{components:t})):r.createElement(S,i({ref:n},s))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,i=new Array(c);i[0]=u;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var y=2;y<c;y++)i[y]=t[y];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6374:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>c,contentTitle:()=>i,metadata:()=>a,toc:()=>p,default:()=>s});var r=t(7462),o=(t(7294),t(3905));const c={id:"AES-Angular-Springboot-config",title:"AES-Angular-Springboot-config"},i=void 0,a={unversionedId:"tech-notes/AES-Angular-Springboot-config",id:"tech-notes/AES-Angular-Springboot-config",title:"AES-Angular-Springboot-config",description:"AES encryption and decryption in Angular",source:"@site/docs/tech-notes/aes-encryption-decryption.md",sourceDirName:"tech-notes",slug:"/tech-notes/AES-Angular-Springboot-config",permalink:"/yogeshcodes/tech-notes/AES-Angular-Springboot-config",tags:[],version:"current",frontMatter:{id:"AES-Angular-Springboot-config",title:"AES-Angular-Springboot-config"},sidebar:"docs",previous:{title:"Simple Promise Implementation",permalink:"/yogeshcodes/tech-notes/simple-promise-notes"},next:{title:"Bookmarks",permalink:"/yogeshcodes/category/bookmarks"}},p=[],y={toc:p};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"AES encryption and decryption in Angular "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"\npublic encrypt(req: any, any: any) {\n    const key = CryptoJS.enc.Utf8.parse('SecretHiddenKey9');\n    const bytes = CryptoJS.AES.encrypt(req, key, {iv: key});\n    req = bytes.toString(CryptoJS.enc.Utf8.parse.arguments);\n    return req;\n  }\n  \n  public decrypt(req: any, any: any): any {\n    const key = CryptoJS.enc.Utf8.parse('SecretHiddenKey9');\n    const bytes = CryptoJS.AES.decrypt(req, key, {iv: key});\n    req = bytes.toString(CryptoJS.enc.Utf8);\n    return req;\n  }\n\n")),(0,o.kt)("p",null,"AES encryption and decryption in Springboot "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'\nprivate static final String key = "SecretHiddenKey9";\n\npublic String encrypt(String Data) throws Exception {\n          try {\n                IvParameterSpec iv = new IvParameterSpec(key.getBytes("UTF-8"));\n                SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes("UTF-8"), "AES");\n                Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");\n                cipher.init(Cipher.ENCRYPT_MODE, skeySpec, iv);\n                byte[] encrypted = cipher.doFinal(Data.getBytes());\n                return new String(Base64.getEncoder().encode(encrypted));\n            } catch (Exception e) {\n                e.printStackTrace();\n                return null;\n            }\n    }\n    \n\n\n    public String decrypt(String EncryptValue) throws Exception {\n         try {\n                IvParameterSpec iv = new IvParameterSpec(key.getBytes("UTF-8"));\n                SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes("UTF-8"), "AES");\n                Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");\n                cipher.init(Cipher.DECRYPT_MODE, skeySpec, iv);\n                byte[] cipherText = cipher.doFinal(Base64.getDecoder().decode(EncryptValue));\n                return new String(cipherText);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return null;\n            }\n        }\n\n\n')))}s.isMDXComponent=!0}}]);